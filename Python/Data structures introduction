{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/net4troll/DS-GMC-WS/blob/main/Ali_REZOUALI_Data_structures.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "i2MB4WBY2ZR4"
      },
      "source": [
        "**Question1:**\n",
        "\n",
        "Write a Python program to multiplies all the items in a list.\n",
        "\n",
        "for example list=[2, 3, 6]\n",
        "\n",
        "result = 36"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5i77oucL2ZR5",
        "outputId": "426de98c-f7ec-4e79-81c9-7d66ce4a42e9"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "36\n"
          ]
        }
      ],
      "source": [
        "my_list=[2, 3, 6]\n",
        "multiplied_list = 1\n",
        "for i in my_list:\n",
        "    multiplied_list = multiplied_list*i\n",
        "print(multiplied_list)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7jA9Cm5C2ZR7"
      },
      "source": [
        "**Question2**\n",
        "\n",
        "Write a Python program to combine two dictionary adding values for common keys.\n",
        "\n",
        "d1 = {'a': 100, 'b': 200, 'c':300}\n",
        "\n",
        "d2 = {'a': 300, 'b': 200, 'd':400}\n",
        "\n",
        "//Expected output: {'a': 400, 'b': 400, 'd': 400, 'c': 300}\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3Lhrwvog2ZR8",
        "outputId": "4094446c-a214-47c5-edcc-20449a77386a"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'a': 400, 'b': 400, 'd': 400, 'c': 300}\n"
          ]
        }
      ],
      "source": [
        "d1 = {'a': 100, 'b': 200, 'c':300}\n",
        "d2 = {'a': 300, 'b': 200, 'd':400}\n",
        "d3 = {}\n",
        "for x in d1:\n",
        "    for y in d2:\n",
        "        if y == x :\n",
        "            d3[y]=d1[x]+d2[y]\n",
        "d3[y]=d2[y]\n",
        "d3[x]=d1[x]\n",
        "print(d3)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "d1 = {'a': 100, 'b': 200, 'c':300}\n",
        "d2 = {'a': 300, 'b': 200, 'd':400}\n",
        "d3 = {}\n",
        "for x,y in zip(d1,d2):\n",
        "  d3[y]=d1[x]+d2[y]\n",
        "d3[y]=d2[y]\n",
        "d3[x]=d1[x]\n",
        "print(d3)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "rk5Paf2los0W",
        "outputId": "f1bb9fa6-bf35-45a1-c43d-5e01a04ac1fb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'a': 400, 'b': 400, 'd': 400, 'c': 300}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "7e1RqfzB2ZR8"
      },
      "source": [
        "**Question 3**\n",
        "\n",
        "Question: With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary. Suppose the following input is supplied to the program: 8 Then, the output should be: {1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aktq-Shm2ZR8",
        "outputId": "d3addabf-c1bd-4069-dfcd-01eeef76ce94"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{1: 1, 2: 4, 3: 9, 4: 16, 5: 25, 6: 36, 7: 49, 8: 64}\n"
          ]
        }
      ],
      "source": [
        "n=8\n",
        "generated_dictionary={}\n",
        "for b in range(1,n+1):\n",
        "    generated_dictionary[b]=b*b\n",
        "print(generated_dictionary)"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "base",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.15"
    },
    "orig_nbformat": 4,
    "vscode": {
      "interpreter": {
        "hash": "2fa2e302ee291b77fee4ff8e7d2ce4167d62bf135230eea5ad7cf413f86524d3"
      }
    },
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "accelerator": "TPU",
    "gpuClass": "standard"
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
